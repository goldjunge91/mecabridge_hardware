# mecabridge Mecanum Drive Controller Configuration  
# This configuration is for 4-wheel mecanum drive robots using mecabridge motor drivers
# Supports omnidirectional movement (forward/backward, sideways, rotation)

controller_manager:
  ros__parameters:
    update_rate: 20  # Hz - Control loop frequency

    # Controller definitions
    mecanum_cont:
      type: mecanum_drive_controller/MecanumDriveController

    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster

# Mecanum drive controller configuration
mecanum_cont:
  ros__parameters:
    # Wheel joint names (must match URDF joint names)
    front_left_wheel_name: "front_left_wheel"
    front_right_wheel_name: "front_right_wheel"
    rear_left_wheel_name: "rear_left_wheel"
    rear_right_wheel_name: "rear_right_wheel"

    # Robot geometry parameters (meters)
    wheel_separation_x: 0.3  # Distance between front and rear axles (wheelbase)
    wheel_separation_y: 0.3  # Distance between left and right wheels (track width)
    wheel_radius: 0.04       # Mecanum wheel radius

    # Calibration multipliers (adjust for mechanical tolerances)
    wheel_separation_x_multiplier: 1.0
    wheel_separation_y_multiplier: 1.0
    wheel_radius_multiplier: 1.0

    # Publishing configuration
    publish_rate: 50.0        # Odometry publishing rate (Hz)
    odom_frame_id: odom       # Odometry frame name
    base_frame_id: base_link  # Robot base frame name
    
    # Odometry covariance (position: x, y, z, roll, pitch, yaw)
    pose_covariance_diagonal: [ 0.001, 0.001, 0.001, 0.001, 0.001, 0.01 ]
    # Velocity covariance (linear: x, y, z, angular: x, y, z)
    twist_covariance_diagonal: [ 0.001, 0.001, 0.001, 0.001, 0.001, 0.01 ]

    # Control configuration
    open_loop: true           # Use open-loop control (no encoder feedback)
    enable_odom_tf: true      # Publish odom->base_link transform
    cmd_vel_timeout: 0.5      # Command timeout (seconds)
    use_stamped_vel: false    # Use geometry_msgs/Twist (not TwistStamped)

    # === Velocity and Acceleration Limits ===
    
    # Linear X velocity limits (forward/backward)
    linear.x.has_velocity_limits: true
    linear.x.has_acceleration_limits: true
    linear.x.max_velocity: 0.3      # m/s
    linear.x.min_velocity: -0.3     # m/s
    linear.x.max_acceleration: 1.0  # m/s²

    # Linear Y velocity limits (sideways - mecanum specific)
    linear.y.has_velocity_limits: true
    linear.y.has_acceleration_limits: true
    linear.y.max_velocity: 0.3      # m/s
    linear.y.min_velocity: -0.3     # m/s
    linear.y.max_acceleration: 1.0  # m/s²

    # Angular Z velocity limits (rotation)
    angular.z.has_velocity_limits: true
    angular.z.has_acceleration_limits: true
    angular.z.max_velocity: 1.0      # rad/s
    angular.z.min_velocity: -1.0     # rad/s
    angular.z.max_acceleration: 1.5  # rad/s²